{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/administrar-producto/administrar-producto.component.ts","webpack:///src/app/components/administrar-producto/administrar-producto.component.html","webpack:///src/app/components/administrar-proveedor/administrar-proveedor.component.ts","webpack:///src/app/components/administrar-proveedor/administrar-proveedor.component.html","webpack:///src/app/components/administrar-usuario/administrar-usuario.component.ts","webpack:///src/app/components/administrar-usuario/administrar-usuario.component.html","webpack:///src/app/components/agregar-producto/agregar-producto.component.ts","webpack:///src/app/components/agregar-producto/agregar-producto.component.html","webpack:///src/app/components/comprar/comprar.component.ts","webpack:///src/app/components/comprar/comprar.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/modificar-usuario/modificar-usuario.component.ts","webpack:///src/app/components/modificar-usuario/modificar-usuario.component.html","webpack:///src/app/components/principal/principal.component.ts","webpack:///src/app/components/principal/principal.component.html","webpack:///src/app/components/productos-clientes/productos-clientes.component.ts","webpack:///src/app/components/productos-clientes/productos-clientes.component.html","webpack:///src/app/components/registro/registro.component.ts","webpack:///src/app/components/registro/registro.component.html","webpack:///src/app/components/ver-producto/ver-producto.component.ts","webpack:///src/app/components/ver-producto/ver-producto.component.html","webpack:///src/app/components/ver-proveedores/ver-proveedores.component.ts","webpack:///src/app/components/ver-proveedores/ver-proveedores.component.html","webpack:///src/app/registro-proveedor/registro-proveedor.component.ts","webpack:///src/app/registro-proveedor/registro-proveedor.component.html","webpack:///src/app/services/producto.service.ts","webpack:///src/app/services/proveedor.service.ts","webpack:///src/app/services/usuario.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AdministrarProductoComponent","SProductos","router","cat","listacat","nombre_prod","descripcion","headElements","ProductoEnviar","cantidad","precio_compra","precio_venta","categoria","Nombres","localStorage","getItem","habilitacion","obtenerCategorias","subscribe","res","console","log","Number","idcategoria","x","update","alert","navigate","err","error","clear","Logout","Actualizar","Eliminar","AdministrarProveedorComponent","proveedor","nombre","direccion","telefono","nombre_contacto","limpiar","modificar","darBajaProveedor","AdministrarUsuarioComponent","user","password","apellidos","correo","foto","genero","fechanac","username","fotografia","tipo","getUsuario","u","substring","buscarUsuario","Genero","darBajaUsuario","AgregarProductoComponent","categorias","existe_categoria","Registrar","ProductoEnviar2","registro","EnviarDato","ComprarComponent","Producto","idventa","total","VectorPComprar","VectorProductos2","VectorProductos","Producto_Cantidad","listadir","contador","JSON","parse","ProductosComprar","CargarDirecciones","productoc","p","push","RegistrarDireccion","length","VerificarTodos","CrearVenta","ObtenerUltimaVenta","FinCompra","CrearDireccion","getDirecciones","idv","producto","DetalleVenta","cuenta","prod","VerificaCantidadStock","Comprar","HomeComponent","LoginComponent","service","decoded","respuesta","roles","token","datos","Username","Password","userNameCorrecto","login","almacenar","ObtenerDatos","setItem","CodigoUsuario","Apellidos","Correo","Fecha_Nacimiento","rol","logearse","ModificarUsuarioComponent","PrincipalComponent","ProductosClientesComponent","ProductosElegidos","obtenerProductos","stringify","VerificarCantidad","indice","splice","RegistroComponent","exp","test","correoCorrecto","singup","registrarse","VerProductoComponent","Vector","idc","Modifica","VerProveedoresComponent","Proveedores","VectorProveedores","obtenerProveedores","RegistroProveedorComponent","contacto","RegistroProveedor","baseUrl","ProductoService","http","headers","url","post","pipe","data","get","compra","venta","put","idU","idp","providedIn","ProveedorService","UsuarioService","usuario","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ModificarUsuarioComponent } from './components/modificar-usuario/modificar-usuario.component';\r\n\r\nimport { AdministrarUsuarioComponent } from './components/administrar-usuario/administrar-usuario.component';\r\nimport { RegistroComponent } from './components/registro/registro.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { PrincipalComponent } from './components/principal/principal.component';\r\nimport { AdministrarProveedorComponent } from './components/administrar-proveedor/administrar-proveedor.component';\r\nimport { RegistroProveedorComponent } from './registro-proveedor/registro-proveedor.component';\r\nimport { VerProveedoresComponent } from './components/ver-proveedores/ver-proveedores.component';\r\nimport { AgregarProductoComponent } from './components/agregar-producto/agregar-producto.component';\r\nimport { AdministrarProductoComponent } from './components/administrar-producto/administrar-producto.component';\r\n\r\nimport { VerProductoComponent } from './components/ver-producto/ver-producto.component';\r\nimport { ProductosClientesComponent } from './components/productos-clientes/productos-clientes.component';\r\nimport { ComprarComponent } from './components/comprar/comprar.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'modificarUsuario',\r\n    component: ModificarUsuarioComponent,\r\n  },\r\n  {\r\n    path: 'administrarUsuario',\r\n    component: AdministrarUsuarioComponent,\r\n  },\r\n  {\r\n    path: 'registro',\r\n    component: RegistroComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'principal',\r\n    component: PrincipalComponent,\r\n  },\r\n  {\r\n    path: 'administrarProveedor',\r\n    component: AdministrarProveedorComponent,\r\n  },\r\n  {\r\n    path: 'registroProveedor',\r\n    component: RegistroProveedorComponent,\r\n  },\r\n  {\r\n    path: 'verProveedores',\r\n    component: VerProveedoresComponent,\r\n  },\r\n  {\r\n    path: 'agregarProducto',\r\n    component: AgregarProductoComponent,\r\n  },\r\n  {\r\n    path: 'administrarProducto',\r\n    component: AdministrarProductoComponent,\r\n  },\r\n  {\r\n    path: 'VerProductosAdmin',\r\n    component: VerProductoComponent,\r\n  },\r\n  {\r\n    path: 'VerProductosCliente',\r\n    component: ProductosClientesComponent,\r\n  },\r\n  {\r\n    path: 'Comprar',\r\n    component: ComprarComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'prueba-angular';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nimport { ModificarUsuarioComponent } from './components/modificar-usuario/modificar-usuario.component';\r\n\r\nimport { AdministrarUsuarioComponent } from './components/administrar-usuario/administrar-usuario.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { RegistroComponent } from './components/registro/registro.component';\r\nimport {HttpClientModule,HttpClient} from '@angular/common/http';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { PrincipalComponent } from './components/principal/principal.component';\r\nimport { AdministrarProveedorComponent } from './components/administrar-proveedor/administrar-proveedor.component';\r\nimport { RegistroProveedorComponent } from './registro-proveedor/registro-proveedor.component';\r\nimport { VerProveedoresComponent } from './components/ver-proveedores/ver-proveedores.component';\r\nimport { AgregarProductoComponent } from './components/agregar-producto/agregar-producto.component';\r\n\r\nimport { AdministrarProductoComponent } from './components/administrar-producto/administrar-producto.component';\r\n\r\nimport { VerProductoComponent } from './components/ver-producto/ver-producto.component';\r\nimport { ProductosClientesComponent } from './components/productos-clientes/productos-clientes.component';\r\nimport { ComprarComponent } from './components/comprar/comprar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ModificarUsuarioComponent,\r\n    AdministrarUsuarioComponent,\r\n    RegistroComponent,\r\n    LoginComponent,\r\n    PrincipalComponent,\r\n    AdministrarProveedorComponent,\r\n    RegistroProveedorComponent,\r\n    VerProveedoresComponent,\r\n    AgregarProductoComponent,\r\n    AdministrarProductoComponent,\r\n    VerProductoComponent,\r\n    ProductosClientesComponent,\r\n    ComprarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductoService } from 'src/app/services/producto.service';\r\nimport { Categoria } from 'src/app/models/producto';\r\n\r\n@Component({\r\n  selector: 'app-administrar-producto',\r\n  templateUrl: './administrar-producto.component.html',\r\n  styleUrls: ['./administrar-producto.component.scss']\r\n})\r\nexport class AdministrarProductoComponent implements OnInit {\r\n\r\n  constructor(public SProductos:ProductoService,public router: Router) { }\r\n\r\n  cat: string =\"Categoría\";\r\n  listacat : Categoria[]=[];\r\n  Nombres: string;\r\n  habilitacion: string;\r\n  nombre_prod :string=\"\";\r\n  descripcion: string=\"\";\r\n  cantidad:  number;\r\n  precio_compra: number;\r\n  precio_venta:  number;\r\n  categoria:  number;\r\n  id: string = \"\";\r\n\r\n  headElements = ['Nombre Proveedor', 'Dirección', 'Telefono','Editar'];\r\n\r\n  ProductoEnviar = {\r\n    nombre_prod : '',\r\n    descripcion:'',\r\n    cantidad: 0,\r\n    precio_compra: 0,\r\n    precio_venta: 0,\r\n    categoria: 0\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a>  <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a>\"; \r\n     }else{\r\n      this.habilitacion=\"\";\r\n    }\r\n\r\n    this.SProductos.obtenerCategorias().subscribe((res:any[])=>{\r\n      console.log(res);\r\n      this.listacat=res;\r\n    })\r\n\r\n    this.id = localStorage.getItem('id_producto');\r\n    this.nombre_prod = localStorage.getItem('nombre_prod');\r\n    this.descripcion = localStorage.getItem('descripcion');\r\n    this.cantidad = Number(localStorage.getItem('cantidad'));\r\n    this.precio_compra = Number(localStorage.getItem('precio_compra'));\r\n    this.precio_venta = Number(localStorage.getItem('precio_venta'));\r\n    this.categoria = Number(localStorage.getItem('categoria'));\r\n\r\n  }\r\n\r\n  EligeCategoria(idcategoria:number){\r\n    this.categoria = Number(idcategoria);\r\n    for (const x of this.listacat) {\r\n      if(x.id==idcategoria){\r\n        this.cat=x.categoria;\r\n      }\r\n    }\r\n  }\r\n\r\n  Actualizar(){\r\n    console.log(\"se va a modificar a \" + this.id)\r\n    this.SProductos.update(this.id, this.nombre_prod,this.descripcion, this.cantidad,this.precio_compra , this.precio_venta, this.categoria)\r\n    .subscribe((res)=>{\r\n      console.log(\"ya modifico\");\r\n      console.log(res);     \r\n      alert(\"El producto fue actualizado exitosamente\");\r\n      this.router.navigate(['/VerProductosAdmin']);\r\n    })\r\n  }\r\n\r\n  Eliminar(){\r\n    this.SProductos.delete(this.id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        alert(\"El producto fue eliminado exitosamente\");\r\n        this.router.navigate(['/VerProductosAdmin']);\r\n      },\r\n      err => console.error(err)\r\n    );\r\n  }\r\n\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n        </li>\r\n  \r\n        <div class=\"btn-group\" mdbDropdown>\r\n            <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n            <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n              mdbWavesEffect></button>\r\n            <div class=\"dropdown-menu\">  \r\n              <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n              <div [innerHTML]=\"habilitacion\"></div>\r\n              \r\n              <div class=\"dropdown-divider\"></div>   \r\n              <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n            </div>\r\n          </div>\r\n      </ul>\r\n      <!-- Links -->\r\n  \r\n      \r\n    </links>\r\n    <!-- Collapsible content -->\r\n  \r\n  </mdb-navbar>\r\n    \r\n    <div class=\"row \">\r\n      <div class=\"col-12\">\r\n        <h3 align=center class=\"p-3 text \"  style=\"font-size: 30px; font-weight:bold; color:darkslateblue \"> Modificar o Eliminar Producto </h3>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Extended material form grid -->\r\n    \r\n    <div class=\"container\">\r\n      <div class=\"row \">\r\n        <div class=\"col-md-3 col-1\">\r\n    \r\n        </div>\r\n        <div class=\"col-md-6 col-10\">\r\n          <form>\r\n            <!-- Grid row -->\r\n            <div class=\"form-row\">\r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input  mdbInput  name=\"txtname\" [(ngModel)]=\"nombre_prod\" type=\"text\" class=\"form-control\" id=\"inputname\" placeholder=\"\">\r\n                  <label for=\"inputEmail4MD\">Nombre del producto</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n    \r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtdireccion\" [(ngModel)]=\"descripcion\" type=\"text\" class=\"form-control\" id=\"inputApellidos\" placeholder=\"\">\r\n                  <label for=\"inputAddressMD\">Descripción</label>\r\n                </div>\r\n              \r\n              </div>\r\n              <!-- Grid column -->\r\n            </div>\r\n            <!-- Grid row -->\r\n    \r\n            <!-- Grid row -->\r\n            <div class=\"row\">\r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <!-- Material input -->              \r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txttelefonno\" [(ngModel)]=\"cantidad\" type=\"phone\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                  <label for=\"inputAddress2MD\">Cantidad </label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n    \r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <!-- xxx Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtContacto\" [(ngModel)]=\"precio_compra\" type=\"text\" class=\"form-control\" id=\"inputPassword4MD\" placeholder=\"\">\r\n                  <label for=\"inputPassword4MD\">Precio Compra</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n            </div>\r\n            <!-- Grid row -->\r\n    \r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->              \r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txttelefonno\" [(ngModel)]=\"precio_venta\" type=\"phone\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                <label for=\"inputAddress2MD\">Precio Venta </label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n                <div class=\"md-form form-group\">\r\n                    <div class=\"btn-group\" mdbDropdown>\r\n                      <button type=\"button\" mdbBtn color=\"secondary\" class=\"waves-light\" mdbWavesEffect>{{cat}}</button>\r\n                      <button type=\"button\" mdbDropdownToggle mdbBtn color=\"secondary\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n                        mdbWavesEffect></button>\r\n                      <div class=\"dropdown-menu\">  \r\n                        <a class=\"dropdown-item\" *ngFor=\"let categoria of listacat\" (click)=\"EligeCategoria(categoria.id)\" > {{categoria.categoria}} </a>\r\n                        <div class=\"dropdown-divider\"></div>\r\n                      </div>\r\n                    </div>               \r\n                </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n            <!-- Grid row -->\r\n    \r\n         \r\n            <!-- Grid row -->\r\n            <button (click)=\"Actualizar()\"  type=\"submit\" mdbBtn color=\"secondary\">Modificar Producto</button>\r\n            <button (click)=\"Eliminar()\"  type=\"submit\" mdbBtn color=\"secondary\">Eliminar Producto</button>\r\n          </form>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Extended material form grid -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProveedorService } from 'src/app/services/proveedor.service';\r\n\r\n@Component({\r\n  selector: 'app-administrar-proveedor',\r\n  templateUrl: './administrar-proveedor.component.html',\r\n  styleUrls: ['./administrar-proveedor.component.scss']\r\n})\r\nexport class AdministrarProveedorComponent implements OnInit {\r\n\r\n  constructor(private proveedor:ProveedorService,public router: Router) { }\r\n  Nombres: string;\r\n  habilitacion: string;\r\n  nombre: string=\"\";\r\n  direccion: string=\"\";\r\n  telefono: string=\"\"; \r\n  nombre_contacto: string=\"\";\r\n  id: string=\"\";\r\n\r\n  ngOnInit(): void {\r\n    this.id = localStorage.getItem('id_proveedor')\r\n    this.nombre = localStorage.getItem('nombre_proveedor')\r\n    this.direccion = localStorage.getItem('direccion_proveedor')\r\n    this.telefono = localStorage.getItem('telefono_proveedor')\r\n    this.nombre_contacto = localStorage.getItem('nombre_contacto')\r\n\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a>\";\r\n    }else{\r\n      this.habilitacion=\"\";\r\n    }\r\n\r\n  }\r\n\r\n  limpiar(){\r\n    this.nombre =\"\";\r\n    this.direccion=\"\";\r\n    this.telefono=\"\"; \r\n    this.nombre_contacto=\"\";\r\n  }\r\n\r\n  darBajaProveedor(){\r\n    this.proveedor.delete(this.id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.limpiar();\r\n      },\r\n      err => console.error(err)\r\n    );\r\n  }\r\n\r\n  modificar(){\r\n    console.log(\"se va a modificar a \" + this.id)\r\n    this.proveedor.update(this.id,this.nombre,this.direccion,this.telefono,this.nombre_contacto)\r\n    .subscribe((res)=>{\r\n      console.log(\"ya modifico\");\r\n      console.log(res);      \r\n    })\r\n  }\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n  <!-- Navbar brand -->\r\n  <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n  </mdb-navbar-brand>\r\n\r\n\r\n  <!-- Collapsible content -->\r\n  <links>\r\n\r\n    <!-- Links -->\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n      </li>\r\n\r\n      <div class=\"btn-group\" mdbDropdown>\r\n          <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n          <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n            mdbWavesEffect></button>\r\n          <div class=\"dropdown-menu\">  \r\n            <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n            <div [innerHTML]=\"habilitacion\"></div>\r\n            \r\n            <div class=\"dropdown-divider\"></div>   \r\n            <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n    </ul>\r\n    <!-- Links -->\r\n\r\n    \r\n  </links>\r\n  <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n  <!--/.Navbar-->\r\n  \r\n  <div class=\"row \">\r\n    <div class=\"col-md-12\">\r\n      <h3 align=center class=\"text-danger\" style=\"font-size: 30px; font-weight:bold\"> Administrar proveedor </h3>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"row \">\r\n      <div class=\"col-md-3\">\r\n  \r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <form>\r\n            <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input  mdbInput  name=\"txtname\" [(ngModel)]=\"nombre\" type=\"text\" class=\"form-control\" id=\"inputname\" placeholder=\"Nombre\">\r\n                <label for=\"inputName\">Nombre</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtdireccion\" [(ngModel)]=\"direccion\" type=\"text\" class=\"form-control\" id=\"inputDireccion\" placeholder=\"Direccion\">\r\n                  <label for=\"inputDireccion\">Direccion</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            \r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txttelefono\" [(ngModel)]=\"telefono\" type=\"text\" class=\"form-control\" id=\"inputTelefono\" placeholder=\"Telefono\">\r\n                <label for=\"inputTelefono\">Telefono</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtnombre_contacto\" [(ngModel)]=\"nombre_contacto\" type=\"text\" class=\"form-control\" id=\"inputNombreContacto\" placeholder=\"Nombre del contacto\">\r\n                  <label for=\"inputNombreContacto\">Nombre del contacto</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n\r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            \r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <button (click)=\"modificar()\"  type=\"submit\" mdbBtn color=\"secondary\">Actualizar</button>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <button (click)=\"darBajaProveedor()\"  type=\"submit\" mdbBtn color=\"secondary\">Dar de Baja</button>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n  \r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\n\r\n@Component({\r\n  selector: 'app-administrar-usuario',\r\n  templateUrl: './administrar-usuario.component.html',\r\n  styleUrls: ['./administrar-usuario.component.scss']\r\n})\r\nexport class AdministrarUsuarioComponent implements OnInit {\r\n\r\n  constructor(private user:UsuarioService,public router: Router) { }\r\n  Nombres: string;\r\n  habilitacion: string;\r\n  \r\n  nombre: string=\"\";\r\n  password: string=\"\";\r\n  apellidos: string=\"\"; \r\n  correo: string=\"\";\r\n  telefono: string=\"\";\r\n  foto: string=\"\"; \r\n  genero: string=\"\";\r\n  fechanac: string=\"\";\r\n  direccion: string=\"\";\r\n  username : string=\"\";\r\n  uploadedFiles: Array <File>;\r\n  fotografia: string=\"\";\r\n\r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a>\";      \r\n\r\n    }else{\r\n      this.habilitacion=\"\";\r\n    }\r\n\r\n  }\r\n\r\n  modificar(){\r\n    this.user.update(this.username,this.nombre,this.apellidos,this.correo,this.password,this.genero, this.fechanac)\r\n    .subscribe((res)=>{\r\n      console.log(\"ya modifico\");\r\n      console.log(res);      \r\n    })\r\n  }\r\n\r\n  Genero(tipo:string){\r\n    if(tipo==\"m\"){\r\n      this.genero='M';\r\n    }else if(tipo==\"f\"){\r\n      this.genero='F';\r\n    }\r\n  }\r\n\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n  buscarUsuario(){\r\n    this.limpiar();\r\n    console.log(\"buscando \" + this.username)\r\n    if (this.username != \"\") {\r\n      this.user.getUsuario(this.username).subscribe((res)=>{\r\n        let u = (res['user']);\r\n        this.nombre = u['Nombres'];\r\n        this.apellidos = u['Apellidos'];\r\n        this.correo = u['Correo'];\r\n        this.password = u['Password'];\r\n        this.genero = u['Genero'];\r\n        this.fechanac = u['Fecha_Nacimiento'].substring(0, 10);\r\n        console.log(u);\r\n      })\r\n    }\r\n  }\r\n\r\n  limpiar(){\r\n    this.nombre =\"\";\r\n    this.password=\"\";\r\n    this.apellidos=\"\"; \r\n    this.correo=\"\";\r\n    this.genero=\"\";\r\n    this.fechanac=\"\";\r\n  }\r\n\r\n  darBajaUsuario(){\r\n    this.user.delete(this.username).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.limpiar();\r\n      },\r\n      err => console.error(err)\r\n    );\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n  <!-- Navbar brand -->\r\n  <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n  </mdb-navbar-brand>\r\n\r\n\r\n  <!-- Collapsible content -->\r\n  <links>\r\n\r\n    <!-- Links -->\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n      </li>\r\n\r\n      <div class=\"btn-group\" mdbDropdown>\r\n          <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n          <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n            mdbWavesEffect></button>\r\n          <div class=\"dropdown-menu\">  \r\n            <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n            <div [innerHTML]=\"habilitacion\"></div>\r\n            \r\n            <div class=\"dropdown-divider\"></div>   \r\n            <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n    </ul>\r\n    <!-- Links -->\r\n\r\n    \r\n  </links>\r\n  <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n  \r\n  <div class=\"row \">\r\n    <div class=\"col-md-12\">\r\n      <h3 align=center class=\"text-danger\" style=\"font-size: 30px; font-weight:bold\"> Administrar usuario </h3>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"row \">\r\n      <div class=\"col-md-3\">\r\n  \r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <form>\r\n          <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtusername\" [(ngModel)]=\"username\"  type=\"text\" class=\"form-control\" id=\"inputUsername\" placeholder=\"\">\r\n                  <label for=\"inputZipMD\">Username</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <!-- Default inline 1-->\r\n                <div class=\"md-form form-group\">\r\n                    <button (click)=\"buscarUsuario()\"  type=\"submit\" mdbBtn color=\"secondary\">Ver</button>     \r\n              </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n          \r\n            <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input  mdbInput  name=\"txtname\" [(ngModel)]=\"nombre\" type=\"text\" class=\"form-control\" id=\"inputname\" placeholder=\"\">\r\n                <label for=\"inputEmail4MD\">Nombre</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtapellidos\" [(ngModel)]=\"apellidos\" type=\"text\" class=\"form-control\" id=\"inputApellidos\" placeholder=\"\">\r\n                  <label for=\"inputAddressMD\">Apellidos</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            \r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtcorreo\" [(ngModel)]=\"correo\" type=\"email\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                <label for=\"inputAddress2MD\">Correo </label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtpass\" [(ngModel)]=\"password\" type=\"password\" class=\"form-control\" id=\"inputPassword4MD\" placeholder=\"Password\">\r\n                  <label for=\"inputPassword4MD\">Password</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <!-- Default inline 1-->\r\n              <div class=\"md-form form-group\">\r\n                <div class=\"btn-group\" mdbDropdown>\r\n                  <button type=\"button\" mdbBtn color=\"secondary\" class=\"waves-light\" mdbWavesEffect>Genero</button>\r\n                  <button type=\"button\" mdbDropdownToggle mdbBtn color=\"secondary\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n                    mdbWavesEffect></button>\r\n                  <div class=\"dropdown-menu\">  \r\n                    <a class=\"dropdown-item\" (click)=\"Genero('m')\" > Masculino </a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item\"  (click)=\"Genero('f')\" >Femenino</a>\r\n\r\n                  </div>\r\n                </div>               \r\n            </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtfechanac\" [(ngModel)]=\"fechanac\"  type=\"text\" class=\"form-control\" id=\"inputfechaNac\" placeholder=\"\">\r\n                <label for=\"inputZipMD\">Fecha de Nacimiento</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n          \r\n          <button (click)=\"modificar()\"  type=\"submit\" mdbBtn color=\"secondary\">Actualizar</button>\r\n          <button (click)=\"darBajaUsuario()\"  type=\"submit\" mdbBtn color=\"secondary\">Dar de Baja</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n  \r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->","import { ngfactoryFilePath } from '@angular/compiler/src/aot/util';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Categoria } from 'src/app/models/producto';\r\nimport { ProductoService } from 'src/app/services/producto.service';\r\n\r\n@Component({\r\n  selector: 'app-agregar-producto',\r\n  templateUrl: './agregar-producto.component.html',\r\n  styleUrls: ['./agregar-producto.component.scss']\r\n})\r\nexport class AgregarProductoComponent implements OnInit {\r\n\r\n  constructor(public SProductos:ProductoService,public router: Router) { }\r\n  \r\n    categorias: boolean=false;\r\n    cat: string =\"Categoría\";\r\n    listacat : Categoria[]=[];\r\n    Nombres: string;\r\n    habilitacion: string;\r\n    nombre_prod :string=\"\";\r\n    descripcion: string=\"\";\r\n    cantidad:  number;\r\n    precio_compra: number;\r\n    precio_venta:  number;\r\n    categoria:  number;\r\n\r\n  headElements = ['Nombre Proveedor', 'Dirección', 'Telefono','Editar'];\r\n\r\n  ProductoEnviar = {\r\n    nombre_prod : '',\r\n    descripcion:'',\r\n    cantidad: 0,\r\n    precio_compra: 0,\r\n    precio_venta: 0,\r\n    categoria: 0\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a>\";\r\n     }else{\r\n      this.habilitacion=\"\";\r\n    }\r\n    this.existe_categoria();\r\n    \r\n  }\r\n\r\n  existe_categoria(){\r\n    this.SProductos.obtenerCategorias().subscribe((res:any[])=>{\r\n      this.listacat=res;\r\n      this.categorias= true;\r\n    })\r\n    this.categorias= false;\r\n  }\r\n\r\n  EnviarDato(){\r\n    if(this.categorias){            \r\n      this.ProductoEnviar.nombre_prod = this.nombre_prod;\r\n      this.ProductoEnviar.descripcion = this.descripcion;\r\n      this.ProductoEnviar.cantidad=Number(this.cantidad);\r\n      this.ProductoEnviar.precio_venta=Number(this.precio_venta);\r\n      this.ProductoEnviar.precio_compra=Number(this.precio_compra);\r\n      this.ProductoEnviar.categoria=Number(this.categoria);    \r\n    }\r\n    this.Registrar(this.ProductoEnviar);\r\n}\r\n\r\nRegistrar(ProductoEnviar2){\r\n    this.SProductos.registro(ProductoEnviar2)\r\n    .subscribe(\r\n      res => {\r\n      //console.log(res);\r\n      alert(\"PRODUCTO REGISTRAD0\");\r\n      //console.log(this.respuesta.affectedRows);\r\n      },\r\n      err => { alert(\"PRODUCTO INCORRECTO\");\r\n     }\r\n    )\r\n}\r\n    EligeCategoria(idcategoria:number){\r\n      this.categoria = Number(idcategoria);\r\n      for (const x of this.listacat) {\r\n        if(x.id==idcategoria){\r\n          this.cat=x.categoria;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n   Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n        </li>\r\n  \r\n        <div class=\"btn-group\" mdbDropdown>\r\n            <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n            <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n              mdbWavesEffect></button>\r\n            <div class=\"dropdown-menu\">  \r\n              <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n              <div [innerHTML]=\"habilitacion\"></div>\r\n              \r\n              <div class=\"dropdown-divider\"></div>   \r\n              <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n            </div>\r\n          </div>\r\n      </ul>\r\n      <!-- Links -->\r\n  \r\n      \r\n    </links>\r\n    <!-- Collapsible content -->\r\n  \r\n  </mdb-navbar>\r\n    \r\n    <div class=\"row \">\r\n      <div class=\"col-12\">\r\n        <h3 align=center class=\"p-3 text \"  style=\"font-size: 30px; font-weight:bold; color:darkslateblue \"> Registro nuevo Producto </h3>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Extended material form grid -->\r\n    \r\n    <div class=\"container\">\r\n      <div class=\"row \">\r\n        <div class=\"col-md-3 col-1\">\r\n    \r\n        </div>\r\n        <div class=\"col-md-6 col-10\">\r\n          <form>\r\n            <!-- Grid row -->\r\n            <div class=\"form-row\">\r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input  mdbInput  name=\"txtname\" [(ngModel)]=\"nombre_prod\" type=\"text\" class=\"form-control\" id=\"inputname\" placeholder=\"\">\r\n                  <label for=\"inputEmail4MD\">Nombre del producto</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n    \r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtdireccion\" [(ngModel)]=\"descripcion\" type=\"text\" class=\"form-control\" id=\"inputApellidos\" placeholder=\"\">\r\n                  <label for=\"inputAddressMD\">Descripción</label>\r\n                </div>\r\n              \r\n              </div>\r\n              <!-- Grid column -->\r\n            </div>\r\n            <!-- Grid row -->\r\n    \r\n            <!-- Grid row -->\r\n            <div class=\"row\">\r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <!-- Material input -->              \r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txttelefonno\" [(ngModel)]=\"cantidad\" type=\"phone\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                  <label for=\"inputAddress2MD\">Cantidad </label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n    \r\n              <!-- Grid column -->\r\n              <div class=\"col-md-6 col-12\">\r\n                <!-- xxx Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtContacto\" [(ngModel)]=\"precio_compra\" type=\"text\" class=\"form-control\" id=\"inputPassword4MD\" placeholder=\"\">\r\n                  <label for=\"inputPassword4MD\">Precio Compra</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n            </div>\r\n            <!-- Grid row -->\r\n    \r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->              \r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txttelefonno\" [(ngModel)]=\"precio_venta\" type=\"phone\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                <label for=\"inputAddress2MD\">Precio Venta </label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n                <div class=\"md-form form-group\">\r\n                    <div class=\"btn-group\" mdbDropdown>\r\n                      <button type=\"button\" mdbBtn color=\"secondary\" class=\"waves-light\" mdbWavesEffect>{{cat}}</button>\r\n                      <button type=\"button\" mdbDropdownToggle mdbBtn color=\"secondary\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n                        mdbWavesEffect></button>\r\n                      <div class=\"dropdown-menu\">  \r\n                        <a class=\"dropdown-item\" *ngFor=\"let categoria of listacat\" (click)=\"EligeCategoria(categoria.id)\" > {{categoria.categoria}} </a>\r\n                        <div class=\"dropdown-divider\"></div>\r\n                      </div>\r\n                    </div>               \r\n                </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n            <!-- Grid row -->\r\n    \r\n         \r\n            <!-- Grid row -->\r\n            <div class=\"row  p-5\">\r\n              <div class=\"col-md-2  col-12\">\r\n  \r\n              </div>\r\n              <div class=\"col-md-10  col-12\">\r\n               <button (click)=\"EnviarDato()\"  type=\"submit\" mdbBtn color=\"secondary\">Registrar Producto</button>\r\n              </div>\r\n          </div>\r\n          </form>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Extended material form grid -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Producto, UltimaV } from 'src/app/models/producto';\r\nimport { ProductoService } from 'src/app/services/producto.service';\r\n\r\n@Component({\r\n  selector: 'app-comprar',\r\n  templateUrl: './comprar.component.html',\r\n  styleUrls: ['./comprar.component.scss']\r\n})\r\nexport class ComprarComponent implements OnInit {\r\n\r\n  constructor(public router:Router, public Producto:ProductoService) { }\r\n\r\n  idventa : number=0;\r\n  total : number=0;\r\n  Nombres: string;\r\n  VectorPComprar: Producto[]=[];\r\n  VectorProductos2: Producto[] =[];\r\n  VectorProductos: Producto[] =[];\r\n  headElements = ['Nombre Producto', 'Descripción', 'Cantidad','Precio'];\r\n  habilitacion: string;\r\n  contador:number;\r\n  Producto_Cantidad : number[][] =[]; //id producto, cantidad\r\n  direccion: string ;\r\n  listadir = [];\r\n  \r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n    this.contador = Number(localStorage.getItem(\"contadorp\"));\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a>\";\r\n     }else{\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar Datos</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"VerProductosCliente\\\" >Productos</a> \";\r\n    }\r\n    \r\n    this.VectorProductos2 =JSON.parse(localStorage.getItem(\"PRODUCTOS\"));\r\n    this.VectorProductos =JSON.parse(localStorage.getItem(\"PRODUCTOS\"));\r\n    this.Producto_Cantidad =JSON.parse(localStorage.getItem(\"VectorProducto_C\"));\r\n   // console.log(\"AAAAA\");\r\n    //console.log(this.Producto_Cantidad);\r\n   this.ProductosComprar();\r\n   this.CargarDirecciones();\r\n  }\r\n  ProductosComprar(){\r\n    for (const productoc of this.Producto_Cantidad) {     \r\n      //console.log(productoc); \r\n      for (const p of this.VectorProductos2) {\r\n       // console.log(p);\r\n          if(productoc[0]==p.id){\r\n            p.cantidad=productoc[1];\r\n            this.VectorPComprar.push(p);\r\n            this.total=this.total +productoc[1] * p.precio_venta;\r\n          //  console.log(this.VectorPComprar);\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  Comprar(){\r\n    this.RegistrarDireccion(Number(localStorage.getItem(\"CodigoUsuario\")), this.direccion);\r\n    //1. Verifcar que exista la cantidad del producto deseado \r\n    if(this.VectorPComprar.length==this.VerificarTodos()){ \r\n      //significa que existen todas las cantidades que se necesitan \r\n      //registramos la venta\r\n      let id: number = Number(localStorage.getItem(\"CodigoUsuario\"));\r\n      this.Producto.CrearVenta(id).subscribe( res => {\r\n        //alert(\"Se registró correctamente la venta\");\r\n         },\r\n         err => {  alert(\"No se pudo registrar la venta\"); }      \r\n        );\r\n\r\n      //obtener ultima venta\r\n      this.Producto.ObtenerUltimaVenta().subscribe((res:UltimaV)=>{       \r\n        this.idventa =res.id;\r\n        this.FinCompra(this.idventa);\r\n      });\r\n      \r\n    }else {\r\n      alert(\"No hay suficiente producto para su compra.\");\r\n    }\r\n  }\r\n\r\n  RegistrarDireccion(id:number, direccion:string){\r\n    if(this.direccion != \"\"){\r\n      this.Producto.CrearDireccion(id, direccion)\r\n      .subscribe((res)=>{  \r\n        alert(\"DIRECCIÓN REGISTRADA CON ÉXITO\");\r\n      },\r\n      err => {alert(\"NO SE PUDO REGISTRAR LA DIRECCION\")}  \r\n      )\r\n    } else {\r\n      alert(\"Ingrese una dirección de entrega\");\r\n    }\r\n  }\r\n\r\n  CargarDirecciones(){\r\n    this.Producto.getDirecciones(localStorage.getItem(\"CodigoUsuario\")).subscribe((res:any[])=>{\r\n      this.listadir=res;\r\n      console.log(this.listadir);\r\n    })\r\n  }\r\n\r\n  FinCompra(idv:number){\r\n      // llenar los detalles \r\n      let contador=0;\r\n      for (const producto of this.VectorPComprar) {   \r\n        console.log(\"id venta: \"+idv+producto.id+producto.nombre_prod+\" cantidad: \"+producto.cantidad);    \r\n        this.Producto.DetalleVenta(idv,producto.id,producto.cantidad).subscribe( res => {\r\n           \r\n           },\r\n           err => { contador++;  }      \r\n          )\r\n      }\r\n      console.log(contador);\r\n      if(contador>0){\r\n        alert(\"No se pudo registrar la compra\");\r\n      }else {       \r\n        alert(\"Su compra se registró correctamente\");\r\n      }\r\n  }\r\n  VerificarTodos():number{\r\n    let cuenta:number=0;\r\n    for (const prod of this.Producto_Cantidad) {\r\n      if(this.VerificaCantidadStock(prod[0],prod[1])){\r\n        cuenta++;\r\n      }\r\n    }\r\n    return cuenta;\r\n  }\r\n  VerificaCantidadStock(id:number, cantidad: number):boolean{\r\n    for (const prod of this.VectorProductos) {\r\n      if(prod.id == id ){  \r\n        //console.log(\"hola\"+ id + prod.id);  \r\n        //console.log(\"stock: \"+ prod.cantidad + \" cantidad: \"+cantidad) ;\r\n        if(prod.cantidad > cantidad){ \r\n        return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n \r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n        </li>\r\n  \r\n        <div class=\"btn-group\" mdbDropdown>\r\n            <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n            <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n              mdbWavesEffect></button>\r\n            <div class=\"dropdown-menu\">  \r\n              <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n              <div [innerHTML]=\"habilitacion\"></div>\r\n              <div class=\"dropdown-divider\"></div>   \r\n              <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n            </div>\r\n          </div>\r\n      </ul>\r\n      <!-- Links -->\r\n\r\n    <div class=\"contenedor\">\r\n      <img src=\"https://icons.iconarchive.com/icons/graphicloads/100-flat/64/cart-icon.png\" />\r\n      <div class=\"texto-encima\">{{contador}}</div>\r\n    </div>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n    \r\n  </mdb-navbar>\r\n  <section class=\"text-center\">\r\n  <h1 class=\"text-danger\" style=\"font-size: 30px; font-weight:bold\"> Confirme su compra  </h1>\r\n  \r\n <!-- <input type=\"checkbox\" id=\"direccion\" name=\"direccion\" value=\"direccion\">\r\n  <label for=\"direccion\">Dirección nueva</label> -->\r\n  <input  mdbInput  name=\"txtDireccion\" [(ngModel)]=\"direccion\" type=\"text\" id=\"txtdireccion\" placeholder=\"Ingrese dirección\">\r\n  <br>\r\n  <div class=\"md-form form-group\">\r\n  <div class=\"dropdown-menu\">  \r\n    <a class=\"dropdown-item\" *ngFor=\"let dire of listadir\" > {{dire.direccion}} </a>\r\n    <div class=\"dropdown-divider\"></div>\r\n  </div>\r\n</div>\r\n  <br>\r\n\r\n  <table mdbTable >\r\n    <thead class=\"black white-text\">\r\n      <tr>\r\n        <th *ngFor=\"let head of headElements\" scope=\"col-sm\">{{head}} </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr mdbTableCol *ngFor=\"let vector of VectorPComprar\" class=\"grey black-text\">\r\n        <td>{{vector.nombre_prod}}</td>\r\n        <td>{{vector.descripcion}}</td>\r\n        <td>{{vector.cantidad}}</td>\r\n        <td>{{vector.precio_venta}}</td>\r\n         </tr>\r\n    </tbody>\r\n  </table>\r\n  </section>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n      <h4> Su TOTAL es: {{total}}</h4>\r\n    </div>\r\n  <div class=\"col-sm-3\">\r\n    <button  type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" (click)=\"Comprar()\" mdbWavesEffect>COMPRAR</button>\r\n  </div> \r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n    \r\n    <!-- Collapsible content -->\r\n    <links>\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav mr-auto\">  \r\n            <li class=\"nav-item active\">\r\n                <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/login']\">Login</a>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n              <a class=\"nav-link \" mdbWavesEffect href=\"#\">Productos</a>\r\n            </li>\r\n            <!-- <li class=\"nav-item active\"> -->\r\n            <!--   <a class=\"nav-link \" mdbWavesEffect href=\"modificarUsuario\">Modificar Usuario</a> -->\r\n            <!-- </li> -->\r\n          <!-- <li class=\"nav-item active\"> -->\r\n          <!--   <a class=\"nav-link \" mdbWavesEffect href=\"administrarUsuario\">Administrar Usuario</a> -->\r\n          <!-- </li> -->\r\n          <!-- <li class=\"nav-item active\">  -->\r\n          <!--   <a class=\"nav-link \" mdbWavesEffect href=\"administrarProveedor\">Administrar Proveedor</a> -->\r\n          <!-- </li> -->\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/registro']\">Sign Up</a>\r\n          </li>\r\n        </ul>\r\n        <!-- Links -->\r\n  \r\n        <!-- Search form -->\r\n        <form class=\"form-inline waves-light\" mdbWavesEffect>\r\n            <div class=\"md-form my-0\">\r\n                <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\r\n            </div>\r\n        </form>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n  \r\n  </mdb-navbar>\r\n  <!--/.Navbar-->\r\n  \r\n  <div class=\"container-fluid mt-5\">\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-md-1\">\r\n      </div>\r\n      <div class=\"col-md-10 col-sm-12\" >\r\n        <h1 class=\"text-danger text-center\" style=\"font-size: 35px; font-weight:bold\"> ¡En Farma Seven nos preocupamos por tu bienestar!  </h1>\r\n      </div>     \r\n      <div class=\"col-md-1\">\r\n      </div>  \r\n      </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-2\">\r\n            </div>\r\n            <div class=\"col-md-8 col-sm-10\" >\r\n                <img class=\"d-flex avatar-1 mb-md-0 mb-3   mx-auto\" src=\"https://www.questionpro.com/blog/wp-content/uploads/2020/05/1342.jpg\"\r\n                alt=\"Generic placeholder image\" height=\"350px\">\r\n            </div>       \r\n        </div>\r\n        <div class=\"row \">\r\n                <div class=\"col-md-10 col-lg-6 col-xl-4 col-sm-4\"><p></p></div>\r\n              </div>\r\n      \r\n          \r\n          <div class=\"row \">\r\n                <div class=\"col-md-10 col-lg-6 col-xl-4 col-sm-4\"><p>\r\n                  \r\n                </p></div>\r\n              </div>\r\n              <div class=\"row \">\r\n                    <div class=\"col-md-10 col-lg-6 col-xl-4 col-sm-4\"><p></p></div>\r\n              </div>\r\n  \r\n    <section class=\"text-center\">\r\n            <div class=\"row\">\r\n  \r\n                  <!--Grid column-->\r\n                  <div class=\"col-lg-4 col-md-12 mb-4 col-sm-4\">\r\n          \r\n                        <!--Card-->\r\n                        <div class=\"card testimonial-card\">\r\n                  \r\n                          <!--Background color-->\r\n                          <div class=\"card-up rainy-ashville-gradient\">\r\n                          </div>\r\n                  \r\n                          <!--Avatar-->\r\n                          <div class=\"avatar mx-auto\"><img src=\"\"\r\n                              class=\"img-responsive \" height=\"120px\" >\r\n                          </div>\r\n                  \r\n                          <div class=\"card-body\">\r\n                            <!--Name-->\r\n                            <h4 class=\"card-title mt-1\">MISION</h4>\r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p><i class=\"fas fa-quote-left\"></i>  \r\n                              Contribuir al bienestar de los guatemaltecos llevando los productos de salud confiables hasta su hogar, a través de un servicio que supere sus expectativas.\r\n                            \r\n                            </p>\r\n                          </div>\r\n                  \r\n                        </div>\r\n                        <!--Card-->\r\n                  \r\n                      </div>\r\n                      <!--Grid column-->\r\n              <!--Grid column-->\r\n              <div class=\"col-lg-4 col-md-12 mb-4 col-sm-4\">\r\n          \r\n                <!--Card-->\r\n                <div class=\"card testimonial-card\">\r\n          \r\n                  <!--Background color-->\r\n                  <div class=\"card-up rainy-ashville-gradient\">\r\n                  </div>\r\n          \r\n                  <!--Avatar-->\r\n                  <div class=\"avatar mx-auto\"><img src=\"\"\r\n                      class=\"rounded-circle img-responsive\" height=\"120px\">\r\n                  </div>\r\n          \r\n                  <div class=\"card-body\">\r\n                    <!--Name-->\r\n                    <h4 class=\"card-title mt-1\">VISION</h4>\r\n                    <hr>\r\n                    <!--Quotation-->\r\n                    <p><i style=\"font-size: 45px\" class=\"fas fa-quote-left\"></i>  \r\n                      Ser la farmacia preferida de los guatemaltecos para satisfacer sus necesidades de salud y bienestar.\r\n                  </p>\r\n  \r\n                  </div>\r\n          \r\n                </div>\r\n                <!--Card-->\r\n          \r\n              </div>\r\n              <!--Grid column-->\r\n          \r\n              <!--Grid column-->\r\n              <div class=\"col-lg-4 col-md-12 mb-4 col-sm-4\">\r\n          \r\n                <!--Card-->\r\n                <div class=\"card testimonial-card\">\r\n          \r\n                  <!--Background color-->\r\n                  <div class=\"card-up lady-lips-gradient\"></div>\r\n          \r\n                  <!--Avatar-->\r\n                  <div class=\"avatar mx-auto\"><img src=\"\"\r\n                      class=\"rounded-circle img-responsive\" height=\"120px\">\r\n                  </div>\r\n          \r\n                  <div class=\"card-body\">\r\n                    <!--Name-->\r\n                    <h4 class=\"card-title mt-1\">ABOUT ME  </h4>\r\n                    <hr>\r\n                    <!--Quotation-->\r\n                    <p><i style=\"font-size: 5px\" class=\"fas fa-quote-left\"></i> Farma Seven App surge debido al aumento de la demanda en  medicamentos, originada por la pandemia y la necesidad de llevar el medicamento directo a su hogar.</p>\r\n                  </div>\r\n          \r\n                </div>\r\n                <!--Card-->\r\n          \r\n              </div>\r\n              <!--Grid column-->\r\n          \r\n            </div>\r\n          \r\n          </section>\r\n          \r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { Router } from '@angular/router';\r\nimport jwt_decode from 'jwt-decode';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public service: UsuarioService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  public error=false;\r\n \r\n  username: string=\"JorgeS\"; \r\n  password: string=\"1234\";\r\n  decoded: any = [];\r\n  respuesta: any = [];\r\n  roles: any=[];\r\n  token: string =\"\";\r\n  datos = {\r\n    Username: '',\r\n    Password: ''\r\n  };\r\n  userNameCorrecto(username: string): string {\r\n    if(username.length >= 4 && username.length <=15)\r\n    {\r\n      return 'Cumple con el rango'\r\n    }\r\n    \r\n    return 'No cumple con el rango';\r\n  }\r\n  logearse(){\r\n    this.datos.Username = this.username;\r\n    this.datos.Password = this.password;\r\n    if(this.userNameCorrecto(this.username)==\"Cumple con el rango\"){\r\n    this.service.login(this.datos)\r\n    .subscribe(\r\n      res => {\r\n        this.respuesta = res; \r\n        if(this.respuesta.token != \"\")\r\n        {\r\n          this.error=false;       \r\n          this.almacenar();   \r\n        }\r\n      },\r\n      err => {this.error=true; \r\n      this.almacenar(); }      \r\n    )\r\n      }\r\n  }\r\n\r\n  ObtenerDatos(){\r\n    if(!this.error){\r\n       this.decoded = jwt_decode(this.respuesta.token);       \r\n       return true;\r\n    }else {\r\n      return false ;\r\n    }\r\n  }\r\n  almacenar()\r\n  {\r\n    if(this.ObtenerDatos()){\r\n   // localStorage.setItem('llave',this.token);\r\n    this.router.navigate(['/principal']);\r\n    localStorage.setItem('CodigoUsuario',this.decoded.user.CodigoUsuario);\r\n    localStorage.setItem('Username',this.decoded.user.Username);\r\n    localStorage.setItem('Nombres',this.decoded.user.Nombres);\r\n    localStorage.setItem('Apellidos',this.decoded.user.Apellidos);\r\n    localStorage.setItem('Correo',this.decoded.user.Correo);\r\n    localStorage.setItem('Password',this.decoded.user.Password);\r\n    localStorage.setItem('Fecha_Nac',this.decoded.user.Fecha_Nacimiento);\r\n    localStorage.setItem('Rol',this.decoded.user.rol);\r\n    }else {\r\n      alert(\"USUARIO INCORRECTO\");\r\n    }\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/']\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/login']\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/registro']\">Sign Up</a>\r\n        </li>\r\n  \r\n      </ul>\r\n      <!-- Links -->\r\n  \r\n      <!-- Search form -->\r\n      <form class=\"form-inline waves-light\" mdbWavesEffect>\r\n        <div class=\"md-form my-0\">\r\n          <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\r\n        </div>\r\n      </form>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n  \r\n  </mdb-navbar>\r\n  <!--/.Navbar-->\r\n  \r\n  <div class=\"row \">\r\n    <div class=\"col-12\">\r\n      <h3 align=center class=\"p-3 text \"  style=\"font-size: 30px; font-weight:bold; color:darkslateblue \"> Inicio de Sesión</h3>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row  justify-content-center\">\r\n        <div class=\"col-sm-12 col-md-5 \">\r\n            <!-- Default form login -->\r\n            <form class=\"text-center border border-light p-5\">\r\n    \r\n                <p class=\"h4 mb-4\">Ingrese sus datos:</p>\r\n    \r\n                <!-- Email -->\r\n                <input name=\"txtusername\" [(ngModel)]=\"username\" type=\"username\" id=\"defaultLoginFormEmail\" class=\"form-control mb-4\" placeholder=\"Username\">\r\n    \r\n                <!-- Password -->\r\n                <input name=\"txtpass\" [(ngModel)]=\"password\" type=\"password\" id=\"defaultLoginFormPassword\" class=\"form-control mb-4\" placeholder=\"Password\">\r\n    \r\n                <!-- Sign in button -->\r\n                <button (click)=\"logearse()\"  mdbBtn color=\"secondary\" block=\"true\" class=\"my-4\" type=\"submit\">Sign in</button>\r\n    \r\n                <!-- Register -->\r\n                <p>¿No se ha registrado?\r\n                    <a href=\"registro\">Regístrese aquí</a>\r\n                </p>\r\n               \r\n            </form>\r\n            <!-- Default form login -->\r\n        </div>\r\n    </div>\r\n    </div>\r\n  <!-- Extended material form grid -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\n\r\n@Component({\r\n  selector: 'app-modificar-usuario',\r\n  templateUrl: './modificar-usuario.component.html',\r\n  styleUrls: ['./modificar-usuario.component.scss']\r\n})\r\nexport class ModificarUsuarioComponent implements OnInit {\r\n\r\n  Nombres: string;\r\n  habilitacion: string;\r\n  \r\n  constructor(\r\n      private user:UsuarioService,public router: Router\r\n    ) { }\r\n\r\n  nombre: string=\"\";\r\n  password: string=\"\";\r\n  apellidos: string=\"\"; \r\n  correo: string=\"\";\r\n  telefono: string=\"\";\r\n  foto: string=\"\"; \r\n  genero: string=\"\";\r\n  fechanac: string=\"\";\r\n  direccion: string=\"\";\r\n  username : string=\"\";\r\n  uploadedFiles: Array <File>;\r\n  fotografia: string=\"\";\r\n\r\n  ngOnInit(): void {\r\n    this.username = localStorage.getItem('Username');\r\n    console.log(this.username);\r\n    if (this.username != \"\") {\r\n      this.user.getUsuario(this.username).subscribe((res)=>{\r\n        let u = (res['user']);\r\n        this.nombre = u['Nombres'];\r\n        this.apellidos = u['Apellidos'];\r\n        this.correo = u['Correo'];\r\n        this.password = u['Password'];\r\n        this.genero = u['Genero'];\r\n        this.fechanac = u['Fecha_Nacimiento'].substring(0, 10);\r\n        console.log(u);\r\n      })\r\n    }\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a>  <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a>\";   \r\n    \r\n    }else{\r\n      this.habilitacion=\"\";\r\n      this.habilitacion+=\"<div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosCliente\\\" >Productos</a>\";\r\n    }\r\n  }\r\n\r\n  modificar(){\r\n    this.user.update(this.username,this.nombre,this.apellidos,this.correo,this.password,this.genero, this.fechanac)\r\n    .subscribe((res)=>{\r\n      //console.log(\"ya modifico\");\r\n      //console.log(res);      \r\n    })\r\n  }\r\n\r\n  Genero(tipo:string){\r\n    if(tipo==\"m\"){\r\n      this.genero='M';\r\n    }else if(tipo==\"f\"){\r\n      this.genero='F';\r\n    }\r\n  }\r\n\r\n\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n  <!-- Navbar brand -->\r\n  <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n  </mdb-navbar-brand>\r\n\r\n\r\n  <!-- Collapsible content -->\r\n  <links>\r\n\r\n    <!-- Links -->\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n      </li>\r\n\r\n      <div class=\"btn-group\" mdbDropdown>\r\n          <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n          <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n            mdbWavesEffect></button>\r\n          <div class=\"dropdown-menu\">  \r\n            <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n            <div [innerHTML]=\"habilitacion\"></div>\r\n            \r\n            <div class=\"dropdown-divider\"></div>   \r\n            <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n    </ul>\r\n    <!-- Links -->\r\n\r\n    \r\n  </links>\r\n  <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n  <!--/.Navbar-->\r\n  \r\n  <div class=\"row \">\r\n    <div class=\"col-md-12\">\r\n      <h3 align=center class=\"text-danger\" style=\"font-size: 30px; font-weight:bold\"> Ver Datos </h3>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"row \">\r\n      <div class=\"col-md-3\">\r\n  \r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <form>\r\n          \r\n            <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input  mdbInput  name=\"txtname\" [(ngModel)]=\"nombre\" type=\"email\" class=\"form-control\" id=\"inputname\" placeholder=\"\">\r\n                <label for=\"inputEmail4MD\">Nombre</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtapellidos\" [(ngModel)]=\"apellidos\" type=\"text\" class=\"form-control\" id=\"inputApellidos\" placeholder=\"\">\r\n                  <label for=\"inputAddressMD\">Apellidos</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            \r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtcorreo\" [(ngModel)]=\"correo\" type=\"text\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                <label for=\"inputAddress2MD\">Correo </label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n                <!-- Material input -->\r\n                <div class=\"md-form form-group\">\r\n                  <input mdbInput name=\"txtpass\" [(ngModel)]=\"password\" type=\"password\" class=\"form-control\" id=\"inputPassword4MD\" placeholder=\"Password\">\r\n                  <label for=\"inputPassword4MD\">Password</label>\r\n                </div>\r\n              </div>\r\n              <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <!-- Default inline 1-->\r\n              <div class=\"md-form form-group\">\r\n                <div class=\"btn-group\" mdbDropdown>\r\n                  <button type=\"button\" mdbBtn color=\"secondary\" class=\"waves-light\" mdbWavesEffect>Genero</button>\r\n                  <button type=\"button\" mdbDropdownToggle mdbBtn color=\"secondary\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n                    mdbWavesEffect></button>\r\n                  <div class=\"dropdown-menu\">  \r\n                    <a class=\"dropdown-item\" (click)=\"Genero('m')\" > Masculino </a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item\"  (click)=\"Genero('f')\" >Femenino</a>\r\n\r\n                  </div>\r\n                </div>               \r\n            </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtfechanac\" [(ngModel)]=\"fechanac\"  type=\"text\" class=\"form-control\" id=\"inputfechaNac\" placeholder=\"\">\r\n                <label for=\"inputZipMD\">Fecha de Nacimiento</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n          \r\n          <button (click)=\"modificar()\"  type=\"submit\" mdbBtn color=\"secondary\">Actualizar</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n  \r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-principal',\r\n  templateUrl: './principal.component.html',\r\n  styleUrls: ['./principal.component.scss']\r\n})\r\nexport class PrincipalComponent implements OnInit {\r\n\r\n  constructor( public router: Router) { }\r\n  Nombres: string;\r\n  habilitacion: string;\r\n  \r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a>\";\r\n\r\n    }else{\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar Datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosCliente\\\" >Productos</a>\";\r\n      localStorage.setItem(\"contadorp\",\"0\");\r\n    }\r\n \r\n  }\r\n\r\n\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n        </li>\r\n  \r\n        <div class=\"btn-group\" mdbDropdown>\r\n            <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n            <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n              mdbWavesEffect></button>\r\n            <div class=\"dropdown-menu\">  \r\n              <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n              <div [innerHTML]=\"habilitacion\"></div>\r\n              \r\n              <div class=\"dropdown-divider\"></div>   \r\n              <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n            </div>\r\n          </div>\r\n      </ul>\r\n      <!-- Links -->\r\n  \r\n      \r\n    </links>\r\n    <!-- Collapsible content -->\r\n  \r\n  </mdb-navbar>\r\n  <!--/.Navbar-->\r\n  \r\n  <div class=\"row \">\r\n    <div class=\"col-12\">\r\n      <h3 align=center class=\"p-3 text \"  style=\"font-size: 30px; font-weight:bold; color:darkslateblue \"> Bienvenido a Farma Seven </h3>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ProductoService } from 'src/app/services/producto.service';\r\nimport { Producto } from 'src/app/models/producto';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-productos-clientes',\r\n  templateUrl: './productos-clientes.component.html',\r\n  styleUrls: ['./productos-clientes.component.scss']\r\n})\r\nexport class ProductosClientesComponent implements OnInit {\r\n\r\n  constructor(public router:Router, public Producto:ProductoService) { }\r\n  Nombres: string;\r\n  Producto_Cantidad : number[][] =[]; //id producto, cantidad\r\n  ProductosElegidos : number []=[];\r\n  VectorProductos: Producto[] =[];\r\n  headElements = ['Nombre Producto', 'Descripción', 'Cantidad','Precio','Agregar al Carrito','Eliminar del carrito'];\r\n  habilitacion: string;\r\n  contador:number;\r\n\r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n    this.contador = Number(localStorage.getItem(\"contadorp\"));\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a>\";\r\n     }else{\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar Datos</a> \";\r\n    }\r\n\r\n    this.Producto.obtenerProductos().subscribe((res:any[])=>{\r\n      this.VectorProductos=res;\r\n      localStorage.setItem('PRODUCTOS',JSON.stringify(this.VectorProductos));\r\n    })\r\n    \r\n    this.Producto_Cantidad =JSON.parse(localStorage.getItem(\"VectorProducto_C\"));\r\n    if(this.Producto_Cantidad==null){\r\n      this.Producto_Cantidad=[];\r\n    }\r\n  }\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n  AgregarCarrito(id: number){\r\n    this.contador++;\r\n    let cantidad =0;\r\n    localStorage.setItem(\"contadorp\",this.contador+\"\");\r\n    if(this.VerificarCantidad(id)){\r\n      for (const p of this.Producto_Cantidad) {\r\n        if(p[0]==id){\r\n          cantidad= p[1];\r\n          cantidad++;\r\n          p[1]=cantidad;\r\n        }\r\n      }\r\n    }else {\r\n      this.ProductosElegidos.push(id);\r\n      this.Producto_Cantidad.push([id,1]);\r\n    }\r\n   // console.log(this.Producto_Cantidad); \r\n    localStorage.setItem('VectorProducto_C',JSON.stringify(this.Producto_Cantidad));\r\n   \r\n  }\r\n\r\n  EliminarDelCarrito(id: number){\r\n    \r\n    let cantidad =0;\r\n    \r\n    if(this.VerificarCantidad(id)){\r\n      var indice = 0;\r\n      for (const p of this.Producto_Cantidad) {\r\n        if(p[0]==id){\r\n          //Globo con cantidad\r\n          this.contador--;\r\n          localStorage.setItem(\"contadorp\",this.contador+\"\");\r\n          \r\n          //modificar la cantidad\r\n          cantidad= p[1];\r\n          cantidad--;\r\n          p[1]=cantidad;\r\n          if(p[1]==0){\r\n            this.ProductosElegidos.splice(indice, 1);\r\n            this.Producto_Cantidad.splice(indice, 1);\r\n          }\r\n        }\r\n        indice++;\r\n      }\r\n    }else {\r\n      alert('El producto no existe en el carrito');\r\n    }\r\n   // console.log(this.Producto_Cantidad); \r\n    localStorage.setItem('VectorProducto_C',JSON.stringify(this.Producto_Cantidad));\r\n   \r\n  }\r\n \r\n\r\n  VerificarCantidad(id:number):boolean{\r\n    for (const prod of this.ProductosElegidos) {\r\n      if(prod == id ){      \r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n \r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n        </li>\r\n  \r\n        <div class=\"btn-group\" mdbDropdown>\r\n            <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n            <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n              mdbWavesEffect></button>\r\n            <div class=\"dropdown-menu\">  \r\n              <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n              <div [innerHTML]=\"habilitacion\"></div>\r\n              <div class=\"dropdown-divider\"></div>   \r\n              <a class=\"dropdown-item\"  [routerLink]=\"['/Comprar']\"  >Comprar</a>\r\n              <div class=\"dropdown-divider\"></div>   \r\n              <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n            </div>\r\n          </div>\r\n      </ul>\r\n      <!-- Links -->\r\n\r\n    <div class=\"contenedor\">\r\n      <img src=\"https://icons.iconarchive.com/icons/graphicloads/100-flat/64/cart-icon.png\" />\r\n      <div class=\"texto-encima\">{{contador}}</div>\r\n    </div>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n    \r\n  </mdb-navbar>\r\n    <!--/.Navbar-->\r\n    <section class=\"text-center\">\r\n      <h1 class=\"text-danger\" style=\"font-size: 40px; font-weight:bold\"> PRODUCTOS  </h1>\r\n    <table mdbTable >\r\n        <thead class=\"black white-text\">\r\n          <tr>\r\n            <th *ngFor=\"let head of headElements\" scope=\"col-sm\">{{head}} </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr mdbTableCol *ngFor=\"let vector of VectorProductos\" class=\"grey black-text\">\r\n            <td>{{vector.nombre_prod}}</td>\r\n            <td>{{vector.descripcion}}</td>\r\n            <td>{{vector.cantidad}}</td>\r\n            <td>{{vector.precio_venta}}</td>\r\n            <td><button  (click)=\"AgregarCarrito(vector.id)\" type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>Agregar</button></td>\r\n            <td><button  (click)=\"EliminarDelCarrito(vector.id)\" type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>Eliminar</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { Router } from '@angular/router';\r\nimport { stringify } from '@angular/compiler/src/util';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrls: ['./registro.component.scss']\r\n})\r\nexport class RegistroComponent implements OnInit {\r\n\r\n  constructor(public user:UsuarioService,public router: Router) { }\r\n\r\n  nombre: string=\"\";\r\n  password: string=\"\";\r\n  apellidos: string=\"\"; \r\n  correo: string=\"\";\r\n  genero: string=\"\";\r\n  fechanac: string=\"\";\r\n  username : string=\"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  userNameCorrecto(username: string): string {\r\n    if(username.length >= 4 && username.length <=15)\r\n    {\r\n      return 'Cumple con el rango'\r\n    }\r\n    \r\n    return 'No cumple con el rango';\r\n  }\r\n\r\n  correoCorrecto(correo: string): boolean{\r\n\r\n    const exp = /^[_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$/;\r\n\r\n    if(exp.test(correo))\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  registrarse(){\r\n    if(this.correoCorrecto(this.correo)&&(this.userNameCorrecto(this.username)==\"Cumple con el rango\"))\r\n    {\r\n    this.user.singup(this.username,this.nombre,this.apellidos,this.correo,this.password,this.genero,this.fechanac)\r\n    .subscribe((res)=>{  \r\n      alert(\"USUARIO CREADO CON ÉXITO\");\r\n      this.nombre=\"\";\r\n      this.password=\"\";\r\n      this.apellidos=\"\"; \r\n      this.correo=\"\";\r\n      this.genero=\"\";\r\n      this.fechanac=\"\";\r\n      this.username=\"\";\r\n      this.router.navigate(['/']);\r\n    },\r\n    err => {alert(\"NO SE PUDO CREAR EL USUARIO\")}  \r\n    )\r\n  }\r\n  }\r\n\r\n  \r\n  Genero(tipo:string): string{\r\n    if(tipo==\"m\"){\r\n      this.genero='M';\r\n      return this.genero;\r\n    }else if(tipo==\"f\"){\r\n      this.genero='F';\r\n      return this.genero;\r\n    }\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link \" mdbWavesEffect href=\"#\">Home<span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link \" mdbWavesEffect href=login>Login</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link \" mdbWavesEffect href=registro>Sign Up</a>\r\n        </li>\r\n  \r\n      </ul>\r\n      <!-- Links -->\r\n  \r\n      <!-- Search form -->\r\n      <form class=\"form-inline waves-light\" mdbWavesEffect>\r\n        <div class=\"md-form my-0\">\r\n          <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\r\n        </div>\r\n      </form>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n  \r\n  </mdb-navbar>\r\n  <!--/.Navbar-->\r\n  \r\n  <div class=\"row \">\r\n    <div class=\"col-12\">\r\n      <h3 align=center class=\"p-3 text \"  style=\"font-size: 30px; font-weight:bold; color:darkslateblue \"> Registro nuevo usuario </h3>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"row \">\r\n      <div class=\"col-md-3 col-1\">\r\n  \r\n      </div>\r\n      <div class=\"col-md-6 col-10\">\r\n        <form>\r\n          <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input  mdbInput  name=\"txtname\" [(ngModel)]=\"nombre\" type=\"text\" class=\"form-control\" id=\"inputname\" placeholder=\"\">\r\n                <label for=\"inputEmail4MD\">Nombre</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtapellidos\" [(ngModel)]=\"apellidos\" type=\"text\" class=\"form-control\" id=\"inputApellidos\" placeholder=\"\">\r\n                <label for=\"inputAddressMD\">Apellidos</label>\r\n              </div>\r\n            \r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->              \r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtcorreo\" [(ngModel)]=\"correo\" type=\"email\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                <label for=\"inputAddress2MD\">Correo </label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- xxx Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtpass\" [(ngModel)]=\"password\" type=\"password\" class=\"form-control\" id=\"inputPassword4MD\" placeholder=\"Password\">\r\n                <label for=\"inputPassword4MD\">Password</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n        \r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->\r\n              <!-- Default inline 1-->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtusername\" [(ngModel)]=\"username\"  type=\"text\" class=\"form-control\" id=\"inputfechaNac\" placeholder=\"\">\r\n                <label for=\"inputZipMD\">Username</label>\r\n              </div>\r\n             \r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- xxxGrid column -->\r\n            <div class=\"md-form form-group\">\r\n              <div class=\"btn-group\" mdbDropdown>\r\n                <button type=\"button\" mdbBtn color=\"secondary\" class=\"waves-light\" mdbWavesEffect>Genero</button>\r\n                <button type=\"button\" mdbDropdownToggle mdbBtn color=\"secondary\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n                  mdbWavesEffect></button>\r\n                <div class=\"dropdown-menu\">  \r\n                  <a class=\"dropdown-item\" (click)=\"Genero('m')\" > Masculino </a>\r\n                  <div class=\"dropdown-divider\"></div>\r\n                  <a class=\"dropdown-item\"  (click)=\"Genero('f')\" >Femenino</a>\r\n\r\n                </div>\r\n              </div>               \r\n          </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->\r\n             \r\n              <div class=\"col-md-8  col-12\">            \r\n                <!-- Material input -->\r\n                <label for=\"inputZipMD\">Fecha Nacimiento </label>\r\n                <input [(ngModel)]=\"fechanac\" type=\"date\" name=\"fecha\">             \r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-4  col-12\">\r\n              <!-- Material input -->\r\n             \r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n          <div class=\"row  p-5\">\r\n            <div class=\"col-md-2  col-12\">\r\n\r\n            </div>\r\n            <div class=\"col-md-10  col-12\">\r\n             <button (click)=\"registrarse()\" type=\"submit\" mdbBtn color=\"secondary\">Registrarse</button>\r\n            </div>\r\n        </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->","import { Component, OnInit } from '@angular/core';\r\nimport { ProductoService } from 'src/app/services/producto.service';\r\nimport { Producto } from 'src/app/models/producto';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-ver-producto',\r\n  templateUrl: './ver-producto.component.html',\r\n  styleUrls: ['./ver-producto.component.scss']\r\n})\r\nexport class VerProductoComponent implements OnInit {\r\n\r\n  constructor(public router:Router, public Producto:ProductoService) { }\r\n  Nombres: string;\r\n  VectorProductos: Producto[] =[];\r\n  headElements = ['Nombre Producto', 'Descripción', 'Cantidad','Precio Venta','Precio Compra','Detalles'];\r\n  habilitacion: string;\r\n  idc: number;\r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a>  <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a>\";\r\n     }else{\r\n      this.habilitacion=\"\";\r\n    }\r\n\r\n    this.Producto.obtenerProductos().subscribe((res:any[])=>{\r\n      this.VectorProductos=res;\r\n     // console.log(this.Usuarios[0].dpi);\r\n    })\r\n  }\r\n  Modifica(id : number):boolean{\r\n    for (const Vector of this.VectorProductos) {\r\n      if(Vector.id==id){\r\n        this.idc=Vector.id;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  AModificar(id: number){\r\n    if(this.Modifica(id)){\r\n      localStorage.setItem('id_producto',\"\"+this.VectorProductos[this.idc].id);\r\n      localStorage.setItem('nombre_prod',this.VectorProductos[this.idc].nombre_prod);\r\n      localStorage.setItem('descripcion',this.VectorProductos[this.idc].descripcion);\r\n      localStorage.setItem('cantidad',\"\"+this.VectorProductos[this.idc].cantidad);\r\n      localStorage.setItem('precio_compra',this.VectorProductos[this.idc].precio_compra+\"\");\r\n      localStorage.setItem('precio_venta',this.VectorProductos[this.idc].precio_venta+\"\");\r\n      localStorage.setItem('categoria',this.VectorProductos[this.idc].categoria+\"\");\r\n      this.router.navigate(['/administrarProducto']); //acá va la página de modificación \r\n    }\r\n  }\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n    </mdb-navbar-brand>\r\n  \r\n  \r\n    <!-- Collapsible content -->\r\n    <links>\r\n  \r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n        </li>\r\n  \r\n        <div class=\"btn-group\" mdbDropdown>\r\n            <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n            <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n              mdbWavesEffect></button>\r\n            <div class=\"dropdown-menu\">  \r\n              <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n              <!-- <div class=\"dropdown-divider\"></div>    -->\r\n              <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n              <div [innerHTML]=\"habilitacion\"></div>\r\n              \r\n              <div class=\"dropdown-divider\"></div>   \r\n              <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n            </div>\r\n          </div>\r\n      </ul>\r\n      <!-- Links -->\r\n  \r\n      \r\n    </links>\r\n    <!-- Collapsible content -->\r\n  \r\n  </mdb-navbar>\r\n    <!--/.Navbar-->\r\n    <section class=\"text-center\">\r\n      <h1 class=\"text-danger\" style=\"font-size: 40px; font-weight:bold\"> PRODUCTOS  </h1>\r\n    <table mdbTable >\r\n        <thead class=\"black white-text\">\r\n          <tr>\r\n            <th *ngFor=\"let head of headElements\" scope=\"col-sm\">{{head}} </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr mdbTableCol *ngFor=\"let vector of VectorProductos\" class=\"grey black-text\">\r\n            <td>{{vector.nombre_prod}}</td>\r\n            <td>{{vector.descripcion}}</td>\r\n            <td>{{vector.cantidad}}</td>\r\n            <td>{{vector.precio_venta}}</td>\r\n            <td>{{vector.precio_compra}}</td>\r\n            <td><button  (click)=\"AModificar(vector.id)\" type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>Detalles</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Proveedor } from 'src/app/models/proveedor';\r\nimport { ProveedorService } from 'src/app/services/proveedor.service';\r\n\r\n@Component({\r\n  selector: 'app-ver-proveedores',\r\n  templateUrl: './ver-proveedores.component.html',\r\n  styleUrls: ['./ver-proveedores.component.scss']\r\n})\r\nexport class VerProveedoresComponent implements OnInit {\r\n\r\n  constructor(public router:Router, public Proveedores:ProveedorService) { }\r\n  Nombres: string;\r\n  VectorProveedores: Proveedor[] =[];\r\n  headElements = ['Nombre Proveedor', 'Dirección', 'Telefono','Editar'];\r\n  habilitacion: string;\r\n\r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a> <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"registroProveedor\\\" >Agregar Proveedor</a>  <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a> <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a>\";\r\n     }else{\r\n      this.habilitacion=\"\";\r\n    }\r\n\r\n    this.Proveedores.obtenerProveedores().subscribe((res:any[])=>{\r\n      this.VectorProveedores=res;\r\n     // console.log(this.Usuarios[0].dpi);\r\n    })\r\n  }\r\n  Modifica(id : number){\r\n    for (const Vector of this.VectorProveedores) {\r\n      if(Vector.id==id){\r\n        localStorage.setItem('id_proveedor',\"\"+Vector.id);\r\n        localStorage.setItem('nombre_proveedor',Vector.nombre);\r\n        localStorage.setItem('direccion_proveedor',Vector.direccion);\r\n        localStorage.setItem('telefono_proveedor',Vector.telefono);\r\n        localStorage.setItem('nombre_contacto',Vector.nombre_contacto);\r\n        this.router.navigate(['/administrarProveedor']); //acá va la página de modificación \r\n      }\r\n    }\r\n  }\r\n\r\n  Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n  <!-- Navbar brand -->\r\n  <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n  </mdb-navbar-brand>\r\n\r\n\r\n  <!-- Collapsible content -->\r\n  <links>\r\n\r\n    <!-- Links -->\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n      </li>\r\n\r\n      <div class=\"btn-group\" mdbDropdown>\r\n          <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n          <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n            mdbWavesEffect></button>\r\n          <div class=\"dropdown-menu\">  \r\n            <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n            <div [innerHTML]=\"habilitacion\"></div>\r\n            \r\n            <div class=\"dropdown-divider\"></div>   \r\n            <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n    </ul>\r\n    <!-- Links -->\r\n\r\n    \r\n  </links>\r\n  <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n  <!--/.Navbar-->\r\n  <section class=\"text-center\">\r\n    <h1 class=\"text-danger\" style=\"font-size: 40px; font-weight:bold\"> PROVEEDORES  </h1>\r\n  <table mdbTable >\r\n      <thead class=\"black white-text\">\r\n        <tr>\r\n          <th *ngFor=\"let head of headElements\" scope=\"col-sm\">{{head}} </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr mdbTableCol *ngFor=\"let vector of VectorProveedores\" class=\"grey black-text\">\r\n          <td>{{vector.nombre}}</td>\r\n          <td>{{vector.direccion}}</td>\r\n          <td>{{vector.telefono}}</td>\r\n          <td><button  (click)=\"Modifica(vector.id)\" type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>Detalles</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </section>","import { Component, OnInit } from '@angular/core';\r\nimport { ProveedorService } from '../services/proveedor.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-registro-proveedor',\r\n  templateUrl: './registro-proveedor.component.html',\r\n  styleUrls: ['./registro-proveedor.component.scss']\r\n})\r\nexport class RegistroProveedorComponent implements OnInit {\r\n\r\n  constructor(public proveedor:ProveedorService,public router: Router) { }\r\n  Nombres: string;\r\n  nombre: string=\"\";\r\n  contacto: string=\"\";\r\n  telefono: string=\"\";\r\n  direccion: string=\"\";\r\n  habilitacion: string;\r\n  \r\n  ngOnInit(): void {\r\n    this.Nombres=localStorage.getItem('Nombres');\r\n    this.habilitacion=localStorage.getItem('Rol');\r\n    if (this.habilitacion ==\"1\"){\r\n      this.habilitacion=\"<div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarUsuario\\\" >Admin Usuarios</a>  <div class=\\\"dropdown-divider\\\"></div>   </div><a class=\\\"dropdown-item\\\" href=\\\"modificarUsuario\\\" >Modificar mis datos</a>  <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"verProveedores\\\" >Ver Proveedores</a>  <div class=\\\"dropdown-divider\\\"></div><a class=\\\"dropdown-item\\\" href=\\\"administrarProveedor\\\" >Admin Proveedor</a>  <div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"agregarProducto\\\" >Agregar Producto</a>   <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a> \";\r\n    //  this.habilitacion+=\"<div class=\\\"dropdown-divider\\\"></div>    <a class=\\\"dropdown-item\\\"  href=\\\"VerProductosAdmin\\\" >Admin Producto</a>\";\r\n    }else{\r\n      this.habilitacion=\"\";\r\n    }\r\n  }\r\n\r\n  registrarse(){\r\n    // console.log(this.fechanac);\r\n     this.proveedor.RegistroProveedor(this.nombre,this.direccion,this.telefono,this.contacto)\r\n     .subscribe((res)=>{\r\n   \r\n       alert(\"PROVEEDOR REGISTRADO CON ÉXITO\");\r\n       \r\n     },\r\n     err => {alert(\"NO SE PUDO REGISTRAR EL PROVEEDOR\")}  \r\n     )\r\n  \r\n   }\r\n   Logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg #80cbc4 teal lighten-3\">\r\n\r\n  <!-- Navbar brand -->\r\n  <mdb-navbar-brand><a class=\"navbar-brand \" style=\"font-size:30px ; color:darkslateblue \" href=\"#\"> Farma Seven</a>\r\n  </mdb-navbar-brand>\r\n\r\n\r\n  <!-- Collapsible content -->\r\n  <links>\r\n\r\n    <!-- Links -->\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" mdbWavesEffect [routerLink]=\"['/home']\">Home</a>\r\n      </li>\r\n\r\n      <div class=\"btn-group\" mdbDropdown>\r\n          <button type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect>{{Nombres}}</button>\r\n          <button type=\"button\" mdbDropdownToggle mdbBtn color=\"danger\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\r\n            mdbWavesEffect></button>\r\n          <div class=\"dropdown-menu\">  \r\n            <a class=\"dropdown-item\"  [routerLink]=\"['/principal']\">Principal</a>\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/registroProveedor']\">RegistrarProveedor</a> -->\r\n            <!-- <div class=\"dropdown-divider\"></div>    -->\r\n            <!-- <a class=\"dropdown-item\"  [routerLink]=\"['/verProveedores']\">VerProveedores</a> -->\r\n            <div [innerHTML]=\"habilitacion\"></div>\r\n            \r\n            <div class=\"dropdown-divider\"></div>   \r\n            <a class=\"dropdown-item\"   (click)=\"Logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n    </ul>\r\n    <!-- Links -->\r\n\r\n    \r\n  </links>\r\n  <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n  \r\n  <div class=\"row \">\r\n    <div class=\"col-12\">\r\n      <h3 align=center class=\"p-3 text \"  style=\"font-size: 30px; font-weight:bold; color:darkslateblue \"> Registro nuevo Proveedor </h3>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"row \">\r\n      <div class=\"col-md-3 col-1\">\r\n  \r\n      </div>\r\n      <div class=\"col-md-6 col-10\">\r\n        <form>\r\n          <!-- Grid row -->\r\n          <div class=\"form-row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input  mdbInput  name=\"txtname\" [(ngModel)]=\"nombre\" type=\"text\" class=\"form-control\" id=\"inputname\" placeholder=\"\">\r\n                <label for=\"inputEmail4MD\">Nombre</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtdireccion\" [(ngModel)]=\"direccion\" type=\"text\" class=\"form-control\" id=\"inputApellidos\" placeholder=\"\">\r\n                <label for=\"inputAddressMD\">Direccion</label>\r\n              </div>\r\n            \r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n          <!-- Grid row -->\r\n          <div class=\"row\">\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- Material input -->              \r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txttelefonno\" [(ngModel)]=\"telefono\" type=\"phone\" class=\"form-control\" id=\"inputAddress2MD\" placeholder=\"\">\r\n                <label for=\"inputAddress2MD\">Telefono </label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n  \r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <!-- xxx Material input -->\r\n              <div class=\"md-form form-group\">\r\n                <input mdbInput name=\"txtContacto\" [(ngModel)]=\"contacto\" type=\"text\" class=\"form-control\" id=\"inputPassword4MD\" placeholder=\"\">\r\n                <label for=\"inputPassword4MD\">Nombre Contacto</label>\r\n              </div>\r\n            </div>\r\n            <!-- Grid column -->\r\n          </div>\r\n          <!-- Grid row -->\r\n  \r\n        \r\n          <!-- Grid row -->\r\n  \r\n       \r\n          <!-- Grid row -->\r\n          <div class=\"row  p-5\">\r\n            <div class=\"col-md-2  col-12\">\r\n\r\n            </div>\r\n            <div class=\"col-md-10  col-12\">\r\n             <button (click)=\"registrarse()\"  type=\"submit\" mdbBtn color=\"secondary\">Registrar Proveedor</button>\r\n            </div>\r\n        </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Extended material form grid -->","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { map } from 'rxjs/operators';\r\n\r\n//const baseUrl = 'http://192.168.0.3:3000';\r\nconst baseUrl = 'http://localhost:3000';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductoService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  headers: HttpHeaders = new HttpHeaders({\r\n    \"Content-Type\": \"application/json\"\r\n  })\r\n  \r\n  registro(producto){\r\n\r\n    const url= baseUrl+\"/products/create\";\r\n    return this.http.post(\r\n      url,\r\n      producto,\r\n      {\r\n        headers:this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  obtenerCategorias(){\r\n    const url= baseUrl+\"/categoria/\";\r\n    return this.http.get(url);\r\n  }\r\n\r\n  update(id : string, nombre: string,descripcion: string, cantidad:Number, compra:Number, venta:Number, categoria:Number) { \r\n    const url = baseUrl +\"/products/updateProd\";\r\n    //comienza el put\r\n    return this.http.put(\r\n      url,\r\n      {\r\n        \"id\": id,\r\n        \"nombre_prod\": nombre,\r\n        \"descripcion\": descripcion,\r\n        \"cantidad\": cantidad,\r\n        \"precio_compra\": compra,\r\n        \"precio_venta\": venta,\r\n        \"categoria\": categoria\r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  delete(id:string){\r\n    return this.http.delete(`${baseUrl}/products/deleteProd/${id}`);\r\n  }\r\n\r\n  obtenerProductos(){\r\n    const url= baseUrl+\"/products/\";\r\n    return this.http.get(url);\r\n  }\r\n\r\n  //***************************** VENTAS *********************************************** */\r\n\r\n  CrearVenta(idU: number) { \r\n    const url = baseUrl +\"/venta/crearVenta\";\r\n    //comienza el put\r\n    return this.http.post(\r\n      url,\r\n      {\r\n        \"CodigoUsuario\": idU\r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  DetalleVenta(idventa: number,idp :number,cantidad:number) { \r\n    const url = baseUrl +\"/venta/llenarDetalle\";\r\n    //comienza el put\r\n    return this.http.post(\r\n      url,\r\n      {\r\n        \"id_venta\":idventa,\r\n        \"id_producto\":idp,\r\n        \"cantidad\":cantidad\r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  ObtenerUltimaVenta(){\r\n    const url= baseUrl+\"/venta/last\";\r\n    return this.http.get(url);\r\n  }\r\n\r\n  ObtenerTotalVenta(idU:number, idventa:number){\r\n    const url= baseUrl+\"/venta/valorTotal\";\r\n    return this.http.post(\r\n      url,\r\n      {\r\n        \"CodigoUsuario\":idU,\r\n        \"id_venta\":idventa        \r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n  /************************ DIRECCIONES *************************** */\r\n  CrearDireccion(idU:number, direccion:string){\r\n    const url = baseUrl + \"/direccion/createDir\";\r\n    return this.http.post(\r\n      url,\r\n      {\r\n        \"CodigoUsuario\":idU,\r\n        \"direccion\":direccion\r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  getDirecciones(id:string){\r\n    return this.http.get(`${baseUrl}/direccion/?id=${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { map } from 'rxjs/operators';\r\n\r\n//const baseUrl = 'http://192.168.0.3:3000';\r\nconst baseUrl = 'http://localhost:3000';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProveedorService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  //para comunicarnos con json\r\n  headers: HttpHeaders = new HttpHeaders({\r\n    \"Content-Type\": \"application/json\"\r\n  })\r\n\r\n  RegistroProveedor(nombre: string,direccion: string,telefono: string,nombre_contacto: string) {\r\n    //console.log(username,password);\r\n    const url = baseUrl+\"/prov/create\";\r\n    //comienza el post\r\n    return this.http.post(\r\n      url,\r\n      {\r\n        \"nombre\": nombre,\r\n        \"direccion\": direccion,\r\n        \"telefono\": telefono,\r\n        \"nombre_contacto\": nombre_contacto,  \r\n      },\r\n\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  update(id : string, nombre: string,direccion: string,telefono : string,nombre_contacto: string) {\r\n    \r\n    const url = baseUrl+\"/prov/updateProv\";\r\n    //comienza el put\r\n    return this.http.put(\r\n      url,\r\n      {\r\n        \"id\": id,\r\n        \"nombre\": nombre,\r\n        \"direccion\": direccion,\r\n        \"telefono\": telefono,\r\n        \"nombre_contacto\": nombre_contacto\r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  delete(id:string){\r\n    return this.http.delete(`${baseUrl}/prov/deleteProv/${id}`);\r\n  }\r\n  obtenerProveedores(){\r\n    const url= baseUrl+\"/prov/\";\r\n    return this.http.get(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { map } from 'rxjs/operators';\r\n\r\n//const baseUrl = 'http://192.168.0.3:3000';\r\nconst baseUrl = 'http://localhost:3000';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n\r\n \r\n  constructor(private http: HttpClient) { }\r\n  //para comunicarnos con json\r\n  headers: HttpHeaders = new HttpHeaders({\r\n    \"Content-Type\": \"application/json\"\r\n  })\r\n\r\n  singup(username : string, nombre: string,apellidos: string,correo : string, password: string ,genero: string,fechanac: string) {\r\n    //console.log(username,password);\r\n    //const url = \"http://\"+this.puerto+\":3000/app/registro\";\r\n\r\n    const url = baseUrl+\"/user/create\";\r\n    //comienza el post\r\n    return this.http.post(\r\n      url,\r\n      {\r\n        \"Username\": username,\r\n        \"Nombres\": nombre,\r\n        \"Apellidos\": apellidos,\r\n        \"Correo\": correo,\r\n        \"Password\": password,\r\n        \"Genero\": genero,\r\n        \"Fecha_Nacimiento\": fechanac,\r\n        \"rol\":3    \r\n      },\r\n\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  update(username : string, nombre: string,apellidos: string,correo : string, password: string, genero: string,fechanac: string) {\r\n    \r\n      \r\n    const url = baseUrl+\"/user/update\";\r\n    //comienza el put\r\n    return this.http.put(\r\n      url,\r\n      {\r\n        \"Username\": username,\r\n        \"Nombres\": nombre,\r\n        \"Apellidos\": apellidos,\r\n        \"Correo\": correo,\r\n        \"Password\": password,\r\n        \"Genero\": genero,\r\n        \"Fecha_Nacimiento\": fechanac\r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n  delete(Username:string){\r\n    return this.http.delete(`${baseUrl}/user/delete/${Username}`);\r\n    //return this.http.delete(`http://${this.ip}/user/delete${username}`);\r\n  }\r\n\r\n  getUsuario(username :string){\r\n    const url = baseUrl+\"/user/getUsuario\";\r\n    //comienza el post\r\n    return this.http.post(\r\n      url,\r\n      {\r\n        \"Username\" : username\r\n      },\r\n      {\r\n        headers: this.headers\r\n      }\r\n      ).pipe(map(data => data));\r\n  }\r\n\r\n    login(usuario){\r\n\r\n      const url= baseUrl+\"/user/log\";\r\n      return this.http.post(\r\n        url,\r\n        usuario,\r\n        {\r\n          headers:this.headers\r\n        }\r\n    ).pipe(map(data => data));\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}